% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postgres.R
\name{postgres.query}
\alias{postgres.query}
\title{Query Data from a PostgreSQL Table with Optional Parameters}
\usage{
postgres.query(
  .conn,
  .tablename,
  .top = NULL,
  .columns = NULL,
  .predicatelist = NULL,
  .random = F,
  .print = T
)
}
\arguments{
\item{.conn}{A connection object to the PostgreSQL database.}

\item{.tablename}{Name of the table in the PostgreSQL database from which data will be retrieved.}

\item{.top}{An integer specifying the number of rows to retrieve. If NULL (default), all rows are retrieved.}

\item{.columns}{A vector of column names to retrieve. If NULL (default), all columns are retrieved.}

\item{.predicatelist}{A named list where names represent column names and the list elements are values used in the WHERE clause for querying.}

\item{.random}{A logical indicating whether to randomize the order of the result rows. Default is FALSE.}

\item{.print}{A logical indicating whether to print the SQL query statement. Default is TRUE.}
}
\value{
A data.table containing the query results.
}
\description{
This function retrieves data from a specified PostgreSQL table. Users can specify several parameters
to refine their queries, such as limiting the number of rows, selecting specific columns, and adding
conditions or predicates. There's also an option to randomize the result rows.
}
\examples{
# Assuming you have an active connection:
# dt <- postgres.query(.conn, .tablename = "mytable", .top = 10, .columns = c("id", "name"), .predicatelist = list(id = 1))
# print(dt)

}
