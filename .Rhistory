document("PDaiPostgres")
setwd('/home/PDai/R/Projects/')
library(devtools)
library(httpcode)
create("PDaiPostgres")
setwd('/home/PDai/R/Projects/')
library(devtools)
library(httpcode)
# create("PDaiPostgres")
document("PDaiPostgres")
check("PDaiPostgres")
setwd('/home/PDai/R/Projects/')
library(devtools)
library(httpcode)
# create("PDaiPostgres")
document("PDaiPostgres")
check("PDaiPostgres")
install("PDaiPostgres")
install.packages("RPostgres")
library(PDaiPostgres)
library(PDaiPostgres)
RPostgres::
RPostgres::Postgres
library(RPostgres)
devtools::document()
library(PDaiPostgres)
devtools::document()
library(PDaiPostgres)
devtools::document()
library(PDaiPostgres)
devtools::document()
library(PDaiPostgres)
library(PDaiPostgres)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(PDaiPostgres)
library(PDaiPostgres)
library(PDaiPostgres)
test_data <- data.frame(
process = c("handshake", "logout"),
dim = c("results", "summary"),
version = c(1, Inf), # Numeric column with Inf
prompt = c("Check results", "Log out safely"),
chainOfThought = c("Analyze first", "Consider last steps"),
layoutJSON = c("{\"key\": \"value\"}", "{\"key\": \"value2\"}"),
exampleJSON = c("{\"example\": 1}", "{\"example\": NaN}"), # Numeric but in JSON string form
question = c("What next?", "Is it clear?")
)
test_data
.data <- data.frame(
process = c("handshake", "logout"),
dim = c("results", "summary"),
version = c(1, Inf), # Numeric column with Inf
prompt = c("Check results", "Log out safely"),
chainOfThought = c("Analyze first", "Consider last steps"),
layoutJSON = c("{\"key\": \"value\"}", "{\"key\": \"value2\"}"),
exampleJSON = c("{\"example\": 1}", "{\"example\": NaN}"), # Numeric but in JSON string form
question = c("What next?", "Is it clear?")
)
numeric_indices <- sapply(.data, is.numeric)
if (any(numeric_indices)) {
.data[, numeric_indices] <- lapply(.data[, numeric_indices, drop = FALSE], function(x) {
ifelse(is.infinite(x) | is.nan(x), NA, x)
})
}
.data
.data <- data.frame(
process = c("handshake"),
dim = c("results"),
version = c(1), # Numeric column with Inf
prompt = c("Check results"),
chainOfThought = c("Analyze first"),
layoutJSON = c("{\"key\": \"value\"}"),
exampleJSON = c("{\"example\": 1}"), # Numeric but in JSON string form
question = c("What next?")
)
numeric_indices <- sapply(.data, is.numeric)
if (any(numeric_indices)) {
.data[, numeric_indices] <- lapply(.data[, numeric_indices, drop = FALSE], function(x) {
ifelse(is.infinite(x) | is.nan(x), NA, x)
})
}
any(numeric_indices)
.data <- list(
process = c("handshake"),
dim = c("results"),
version = c(1), # Numeric column with Inf
prompt = c("Check results"),
chainOfThought = c("Analyze first"),
layoutJSON = c("{\"key\": \"value\"}"),
exampleJSON = c("{\"example\": 1}"), # Numeric but in JSON string form
question = c("What next?")
)
.data <- as.data.frame(.data)
numeric_indices <- sapply(.data, is.numeric)
# Assuming .data is a data.table
if (any(numeric_indices)) {
.data[, numeric_indices] <- lapply(.data[, numeric_indices, drop = FALSE], function(x) {
ifelse(is.infinite(x) | is.nan(x), NA, x)
})
}
question
.data
.data
exampleRow <- readRDS("~/packages/PDaiPostgres/R/exampleRow.rds")
.data <- exampleRow
.data
numeric_indices <- sapply(.data, is.numeric)
if (any(numeric_indices)) {
.data[, numeric_indices] <- lapply(.data[, numeric_indices, drop = FALSE], function(x) {
ifelse(is.infinite(x) | is.nan(x), NA, x)
})
}
names(.data) <- tolower(names(.data))
numeric_indices
.data <- exampleRow
.data
numeric_indices <- sapply(.data, is.numeric)
if (any(numeric_indices)) {
.data[, numeric_indices] <- lapply(.data[, numeric_indices, drop = FALSE], function(x) {
ifelse(is.infinite(x) | is.nan(x), NA, x)
})
}
library(PDaiPostgres)
library(PDaiPostgres)
library(PDaiPostgres)
library(PDaiPostgres)
library(PDaiPostgres)
library(PDaiPostgres)
